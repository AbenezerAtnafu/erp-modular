@using ERP.Areas.Identity.Data
@using X.PagedList.Mvc.Core
@using X.PagedList
@using X.PagedList.Web.Common
@model X.PagedList.IPagedList<ERP.Areas.Identity.Data.User>

@{
    var searchTerm = ViewContext.HttpContext.Request.Query["searchTerm"];
}


@using (Html.BeginForm("Index", "Users", FormMethod.Get))
{
    <div class="form-group">
        @Html.TextBox("searchTerm", null, new { @class = "form-control", placeholder = "Search by email or username" })
    </div>
    <div class="form-group">
        <button type="submit" class="btn btn-primary">Search</button>
    </div>

    @if (!string.IsNullOrEmpty(searchTerm))
    {
        <a href="@Url.Action("Index")" class="btn btn-secondary">Clear</a>
    }
}

<table class="table">
    <thead>
        <tr>
            <th>UserName</th>
            <th>Email</th>
            <!-- Add other user properties as needed -->
        </tr>
    </thead>
    <tbody>
        @foreach (var user in Model)
        {
            <tr>
                <td>@user.UserName</td>
                <td>@user.Email</td>
                <!-- Display other user properties as needed -->
            </tr>
        }
    </tbody>
</table>

<div class="pagination">
    <ul class="pagination justify-content-center">
        @if (Model.HasPreviousPage)
        {
            <li class="page-item">
                <a class="page-link" href="@Url.Action("ActiveUsers", new { page = Model.PageNumber - 1, searchTerm = ViewBag.SearchTerm })">Previous</a>
            </li>
        }
        @if (Model.HasNextPage)
        {
            <li class="page-item">
                <a class="page-link" href="@Url.Action("ActiveUsers", new { page = Model.PageNumber + 1, searchTerm = ViewBag.SearchTerm })">Next</a>
            </li>
        }
    </ul>
</div>