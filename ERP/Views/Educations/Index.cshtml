@using X.PagedList.Mvc.Core
@using X.PagedList
@using X.PagedList.Web.Common
@model X.PagedList.IPagedList<HRMS.Education_management.Education>
@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@{
    var searchTerm = ViewContext.HttpContext.Request.Query["searchTerm"];
}


<div class="container px-1" style="position:initial;">
    <div class="card">
        <div class="card-header">
            <div class="">
                <h5> Employee Education  List</h5>
                <span class="d-block m-t-5">The following is a list of  Employee Education Information.</span>
            </div>
            <a class="btn btn-info float-right" asp-action="Create"><i class="feather icon-plus fa-fw"></i>Create New</a>
            <form asp-action="Index">
                <div class="d-flex justify-content-end">
                    @*<div class="mr-3">Flex item 1</div>
                    <div class="mr-3">Flex item 2</div>*@
                    <div class="input-group mb-3 w-25">
                        <div class="input-group-prepend">
                            <span class="input-group-text" id="basic-addon1"><i class="feather icon-search"></i></span>
                        </div>
                        <input type="text" class="form-control" placeholder="Search..." name="searchTerm" id="Search" />
                    </div>
                    @if (string.IsNullOrEmpty(searchTerm))
                    {
                        <a href="@Url.Action("Index")" class="btn btn-light">Clear</a>
                    }
                </div>
            </form>
        </div>
        <div class="card-block table-border-style">
            <div class="table-responsive">
                    <table class="table">
                    <thead>
                        <tr>
                            <th>
                                Employee Full Name
                            </th>
                            <th>
                                Institution Name
                            </th>
                            <th>
                                Filed of Study
                            </th>
                            <th>
                                Last Updated
                            </th>
                            <th>
                                 Status
                            </th>
                            <th></th>
                        </tr>
                    </thead>
                 <tbody>
            @foreach (var item in Model) {

                   <tr>
                        <td>
                            @Html.DisplayFor(modelItem => item.Employee.father_name) @Html.DisplayFor(modelItem => item.Employee.father_name)
                          </td>
                               
                                <td>
                                    @if (@item.institution_name != null && @item.institution_name.Length > 10)
                                    {
                                        <h6 class="mb-1">@item.institution_name.Substring(0, 10)...</h6>
                                    }
                                    else
                                    {
                                        <h6 class="mb-1">@Html.DisplayFor(modelItem => @item.institution_name)</h6>
                                    }
                                </td>
                                <td>
                                   @if (@item.filed_of_study != null && @item.filed_of_study.Length > 15)
                                    {
                                        <h6 class="mb-1">@item.filed_of_study.Substring(0, 15)...</h6>
                                    }
                                    else
                                    {
                                        <h6 class="mb-1">@Html.DisplayFor(modelItem => @item.filed_of_study)</h6>
                                    }
                                </td>
                                <td>
                                        @Html.DisplayFor(modelItem => item.updated_date)
                                 </td>
                                 <td>
                                    @if (item.status == true)
                                    {
                                        <span class="badge badge-success">Approved</span>
                                    }
                                    else if (item.status == false)
                                    {
                                        <span class="badge badge-danger">Rejected</span>
                                    }
                                    else
                                    {
                                        <span class="badge badge-warning">Pending </span>
                                    }
                                  </td>
                                <td>
                                    <a asp-action="Details" asp-route-id="@item.id">

                                        <i class="fa fa-angle-double-right fa-fw"></i>
                                    </a>


                                </td>



                   </tr>
            }
                </tbody>
            </table>
                <div class="pagination">
                    <ul class="pagination justify-content-center">
                        <div class="pagination">
                            <ul class="pagination justify-content-center">
                                @if (Model.HasPreviousPage)
                                {
                                    <li class="page-item">
                                        <a class="page-link prev-button" href="@Url.Action("Index", new { page = Model.PageNumber - 1 })">Previous</a>
                                    </li>
                                }



                                @if (Model.HasNextPage)
                                {
                                    <li class="page-item">
                                        <a class="page-link next-button" href="@Url.Action("Index", new { page = Model.PageNumber + 1 })">Next</a>
                                    </li>
                                }
                            </ul>
                        </div>


                        @if (Model.PageNumber != 1)
                        {
                            <li class="page-item">
                                <a class="page-link first-button" href="@Url.Action("Index", new { page = 1 })">Go to the first page</a>
                            </li>
                        }
                    </ul>
                </div>



        </div>
    </div>
    </div>
</div>