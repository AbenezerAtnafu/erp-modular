@using X.PagedList.Mvc.Core
@using X.PagedList
@using X.PagedList.Web.Common
@model IPagedList<Microsoft.AspNetCore.Identity.IdentityRole>
@{
    ViewData["Title"] = "Index";
    var searchTerm = ViewContext.HttpContext.Request.Query["searchTerm"];
}

<div class="page-wrapper">
    <div class="card container">
        <div class="card-header border-bottom-0">
            <div class="card-title mb-5">
                <h5 class="text-muted text-">Manage Roles</h5>
            </div>
            <form asp-action="Index">
                <div class="d-flex justify-content-end">
                    @*<div class="mr-3">Flex item 1</div>
                    <div class="mr-3">Flex item 2</div>*@
                    <div class="input-group mb-3 w-25">
                        <div class="input-group-prepend">
                            <span class="input-group-text" id="basic-addon1"><i class="feather icon-search"></i></span>
                        </div>
                        <input type="text" class="form-control" placeholder="Search.." name="searchTerm" id="Search" />
                    </div>
                    @if (string.IsNullOrEmpty(searchTerm))
                    {
                        <a href="@Url.Action("Index")" class="btn btn-light">Clear</a>
                    }
                </div>
            </form>

            <table class="table table-striped table-bordered">
                <thead>
                    <tr>
                        <td>Id</td>
                        <td>Name</td>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var role in Model)
                    {
                        <tr>
                            <td>@role.Id</td>
                            <td>@role.Name</td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
</div>

<div class="pagination-container">
    @Html.PagedListPager(Model, page => Url.Action("Index", new { page, searchTerm }), new PagedListRenderOptions { Display = PagedListDisplayMode.Always })
</div>