@using X.PagedList.Mvc.Core
@using X.PagedList
@using X.PagedList.Web.Common
@model IPagedList<Microsoft.AspNetCore.Identity.IdentityRole>
@{
    ViewData["Title"] = "Index";
    var searchTerm = ViewContext.HttpContext.Request.Query["searchTerm"];
}

<div class="page-wrapper">
    <div class="card container">
        <div class="card-header border-bottom-0">
            <div class="card-title mb-5">
                <h5 class="text-muted text-">Manage Roles</h5>
            </div>
            @using (Html.BeginForm("Index", "Roles", FormMethod.Get))
            {
                <div class="form-group">
                    @Html.TextBox("searchTerm", searchTerm, new { @class = "form-control", placeholder = "Search by role name" })
                </div>
                <div class="form-group">
                    <button type="submit" class="btn btn-primary">Search</button>
                </div>
            }

            <table class="table table-striped table-bordered">
                <thead>
                    <tr>
                        <td>Id</td>
                        <td>Name</td>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var role in Model)
                    {
                        <tr>
                            <td>@role.Id</td>
                            <td>@role.Name</td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
</div>

<div class="pagination-container">
    @Html.PagedListPager(Model, page => Url.Action("Index", new { page, searchTerm }), new PagedListRenderOptions { Display = PagedListDisplayMode.Always })
</div>