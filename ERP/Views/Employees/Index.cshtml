@using X.PagedList.Mvc.Core
@using X.PagedList
@using X.PagedList.Web.Common
@model X.PagedList.IPagedList<ERP.Models.HRMS.Employee_managments.Employee>

@{
    ViewData["Title"] = "Employee List";
}

@{
    var searchTerm = ViewContext.HttpContext.Request.Query["searchTerm"];
    var sortOrder = ViewContext.HttpContext.Request.Query["sortOrder"];
    var birthdateFilter = ViewContext.HttpContext.Request.Query["birthdateFilter"];
    var maritalStatusFilter = ViewContext.HttpContext.Request.Query["maritalStatusFilter"];
}

@using (Html.BeginForm("Index", "Employees", FormMethod.Get))
{
    <div class="form-group">
        @Html.TextBox("searchTerm", searchTerm, new { @class = "form-control", placeholder = "Search by First name or Last name" })
    </div>
    <div class="form-group">
        <button type="submit" class="btn btn-primary">Search</button>
    </div>

    <div class="form-group">
        <label for="sortOrder">Sort By:</label>
        <select name="sortOrder" id="sortOrder" class="form-control">
            <option value="">None</option>
            <option value="asc" selected="@(sortOrder == "asc")">First Name (Ascending)</option>
            <option value="desc" selected="@(sortOrder == "desc")">First Name (Descending)</option>
        </select>
    </div>

    <div class="form-group">
        <label for="birthdateFilter">Filter By Birthdate:</label>
        <input type="date" name="birthdateFilter" id="birthdateFilter" class="form-control" value="@birthdateFilter" />
    </div>

    <div class="form-group">
        <label for="maritalStatusFilter">Filter By Marital Status:</label>
        <select name="maritalStatusFilter" id="maritalStatusFilter" class="form-control">

            <option value="Single" selected="@(maritalStatusFilter == "Single" ? "selected" : null)">Single</option>
            <option value="Married" selected="@(maritalStatusFilter == "Married" ? "selected" : null)">Married</option>
            <option value="Divorced" selected="@(maritalStatusFilter == "Divorced" ? "selected" : null)">Divorced</option>
        </select>
    </div>

    <div class="form-group">
        <button type="submit" class="btn btn-primary">Apply Filters</button>
    </div>
    @if (!string.IsNullOrEmpty(searchTerm) || !string.IsNullOrEmpty(sortOrder) || !string.IsNullOrEmpty(birthdateFilter) || !string.IsNullOrEmpty(maritalStatusFilter))
    {
        <a href="@Url.Action("Index")" class="btn btn-secondary">Clear Filters</a>
    }
}

<div class="container px-1" style="position: initial;">
    <div class="card">
        <div class="card-header">
            <h5>Employee List</h5>
            <span class="d-block m-t-5">use class <code>table-hover</code> inside table element</span>
        </div>
        <div class="card-block table-border-style">
            <div class="table-responsive">
                <table class="table table-hover">
                    <thead>
                        <tr>
                            <th>First Name</th>
                            <th>Last Name</th>
                            <th>Phone Number</th>
                            <th>Employee Code</th>
                            <th>Department</th>
                            <th>Position</th>
                            <th>Action</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var employee in Model)
                        {
                            <tr>
                                <td>@employee.first_name</td>
                                <td>@employee.father_name</td>
                                <td>@employee.Employee_Contact.phonenumber </td>
                                <td>@ViewBag.employeecode</td>
                              @*  <td>@employee.Employee_Office.Department.name</td>
                                <td>@employee.Employee_Office.Position.name</td>*@
                                
                                <td>
                                    <a href="@Url.Action("Edit", new { id = employee.id })" class="btn btn-primary">Edit</a>
                                    <a href="@Url.Action("Delete", new { id = employee.id })" class="btn btn-danger">Delete</a>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>

<div class="pagination">
    <ul class="pagination justify-content-center">
        @if (Model.HasPreviousPage)
        {
            <li class="page-item">
                <a class="page-link" href="@Url.Action("Index", new { page = Model.PageNumber - 1 })">Previous</a>
            </li>
        }